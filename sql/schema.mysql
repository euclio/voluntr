DROP TABLE IF EXISTS registers_for, time_slot, request,
                     specifies_time_available, indicate, organize,
                     receives_review, event, user, skill, review;

CREATE TABLE user (userID INT NOT NULL AUTO_INCREMENT,
                    name VARCHAR(50) NOT NULL,
                    email VARCHAR(255) UNIQUE NOT NULL,
                    password BINARY(60) NOT NULL,
                    role ENUM('volunteer', 'coordinator'),
                    PRIMARY KEY (userID));

CREATE TABLE event (eventID INT NOT NULL AUTO_INCREMENT,
                    title VARCHAR(50) NOT NULL,
                    description VARCHAR(300) NOT NULL,
                    location VARCHAR(50) NOT NULL,
                    startTime DATETIME NOT NULL,
                    endTime DATETIME NOT NULL,
                    PRIMARY KEY (eventID));

CREATE TABLE skill (skillID INT NOT NULL AUTO_INCREMENT,
                    skill_name VARCHAR(75) NOT NULL,
                    PRIMARY KEY (skillID)); 

CREATE TABLE review (reviewID INT NOT NULL AUTO_INCREMENT,
                    rating INT NOT NULL,
                    CONSTRAINT rating CHECK (rating IN (1, 2, 3, 4)),
                    comment VARCHAR(300),
                    PRIMARY KEY (reviewID));

CREATE TABLE time_slot (eventID INT NOT NULL,
                    startTime DATETIME NOT NULL,
                    num_needed INT NOT NULL,
                    num_confirmed INT,
                    PRIMARY KEY (eventID, startTime),
                    FOREIGN KEY (eventID) REFERENCES event(eventID));

CREATE TABLE request(eventID INT NOT NULL,
                    skillID INT NOT NULL, 
                    PRIMARY KEY (eventID, skillID),
                    FOREIGN KEY (eventID) REFERENCES event(eventID),
                    FOREIGN KEY (skillID) REFERENCES skill(skillID));

CREATE TABLE specifies_time_available(userID INT NOT NULL,
                    startTime TIME NOT NULL,
                    dayOfWeek ENUM('Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday') NOT NULL,
                    PRIMARY KEY (userID, startTime, dayOfWeek),
                    FOREIGN KEY (userID) REFERENCES user(userID));

CREATE TABLE indicate(userID INT NOT NULL,
                    skillID INT NOT NULL,
                    PRIMARY KEY(userID, skillID),
                    FOREIGN KEY(userID) REFERENCES user(userID),
                    FOREIGN KEY(skillID) REFERENCES skill(skillID));

CREATE TABLE organize(userID INT NOT NULL,
                    eventID INT NOT NULL,
                    PRIMARY KEY(userID, eventID),
                    FOREIGN KEY(userID) REFERENCES user(userID),
                    FOREIGN KEY(eventID) REFERENCES event(eventID));

CREATE TABLE registers_for(userID INT NOT NULL,
                    eventID INT NOT NULL,
                    startTime DATETIME NOT NULL,
                    confirmed BOOLEAN NOT NULL,
                    PRIMARY KEY(userID, eventID, startTime),
                    FOREIGN KEY(userID) REFERENCES user(userID),
                    FOREIGN KEY(eventID, startTime) REFERENCES time_slot(eventID, startTime));

CREATE TABLE receives_review(userID INT NOT NULL,
                    reviewID INT NOT NULL,
                    PRIMARY KEY(userID, reviewID),
                    FOREIGN KEY(userID) REFERENCES user(userID),
                    FOREIGN KEY(reviewID) REFERENCES review(reviewID));
